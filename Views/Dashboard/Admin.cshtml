@{
    ViewData["Title"] = "Admin Dashboard";
}

<link rel="stylesheet" href="~/css/Admin-dashboard.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            DocketEagle
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="btn btn-outline-light" href="#" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content -->
<main class="main-content container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="customer-portal-header">Admin Portal</h2>

        <form class="d-flex search-bar" id="searchForm">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" id="searchInput">
            <button class="btn btn-outline-primary" type="submit"><i class="fas fa-search"></i></button>
        </form>
    </div>

    <h4 class="subscription-info">Subscription: Monthly</h4>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Social Media Service</th>
                    <th>Social Media Account</th>
                    <th>Case Numbers</th>
                    <th>Subscription Start</th>
                    <th>Subscription End</th>
                    <th>Subscription Type</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tableBody">
                <!-- Table rows will be dynamically populated here -->
            </tbody>
        </table>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Mock data
    const mockData = [
        {
            id: 1,
            fullName: "John Doe",
            email: "john@example.com",
            socialMediaService: "Facebook",
            socialMediaAccount: "johndoe_fb",
            caseNumbers: "123, 456, 789",
            subscriptionStart: "2023-01-01",
            subscriptionEnd: "2023-12-31",
            subscriptionType: "Upto 6",
            status: "Enabled"
        },
        {
            id: 2,
            fullName: "Jane Smith",
            email: "jane@example.com",
            socialMediaService: "Twitter",
            socialMediaAccount: "janesmith_tw",
            caseNumbers: "222, 333, 444",
            subscriptionStart: "2023-01-05",
            subscriptionEnd: "2024-01-05",
            subscriptionType: "Upto 2",
            status: "Enabled"
        },
        // Add more mock data here...
    ];

    // Function to render table rows
    function renderTable() {
        const tableBody = document.getElementById('tableBody');
        tableBody.innerHTML = ''; // Clear table body before rendering new rows

        mockData.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                        <td>${item.fullName}</td>
                        <td>${item.email}</td>
                        <td>${item.socialMediaService}</td>
                        <td>${item.socialMediaAccount}</td>
                        <td>${item.caseNumbers}</td>
                        <td>${item.subscriptionStart}</td>
                        <td>${item.subscriptionEnd}</td>
                        <td><span class="badge bg-success">${item.subscriptionType}</span></td>
                        <td><span class="badge bg-${item.status === 'Enabled' ? 'success' : 'danger'}">${item.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-outline-danger btn-action" onclick="deleteUser(${item.id})"><i class="fas fa-trash"></i></button>
                            <button class="btn btn-sm btn-outline-warning btn-action" onclick="toggleStatus(${item.id})"><i class="fas fa-toggle-on"></i></button>
                            <button class="btn btn-sm btn-outline-info btn-action" onclick="viewInvoice(${item.id})"><i class="fas fa-file-invoice"></i></button>
                        </td>
                    `;
            tableBody.appendChild(row);
        });
    }

    // Function to toggle status (Enable/Disable)
    function toggleStatus(id) {
        const user = mockData.find(item => item.id === id);
        if (user) {
            user.status = user.status === 'Enabled' ? 'Disabled' : 'Enabled';
            renderTable(); // Re-render table after toggling
        }
    }

    // Function to view invoice
    function viewInvoice(id) {
        alert(`Viewing invoice for user with ID: ${id}`);
        // In a real application, this would open a modal or navigate to an invoice page
    }

    // Function to handle search
    function handleSearch(event) {
        event.preventDefault();
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const filteredData = mockData.filter(item =>
            item.fullName.toLowerCase().includes(searchTerm) ||
            item.email.toLowerCase().includes(searchTerm) ||
            item.socialMediaAccount.toLowerCase().includes(searchTerm)
        );
        renderTable(filteredData);
    }

    // Function to delete user
    function deleteUser(id) {
        if (confirm('Are you sure you want to delete this user?')) {
            const index = mockData.findIndex(item => item.id === id);
            if (index !== -1) {
                mockData.splice(index, 1); // Remove user from data
                renderTable(); // Re-render table after deletion
            }
        }
    }

    // Event listeners
    document.getElementById('searchForm').addEventListener('submit', handleSearch);
    document.getElementById('logoutBtn').addEventListener('click', (e) => {
        e.preventDefault();
        alert('Logout functionality would be implemented here.');
    });

    // Initial render
    renderTable();
</script>