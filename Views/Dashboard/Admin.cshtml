@{
    ViewData["Title"] = "Admin Dashboard";
}
@model Docket_Eagle.Models.ViewModels.AdminViewModel;
<link rel="stylesheet" href="~/css/Admin-dashboard.css" asp-append-version="true" />

<nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            DocketEagle - Admin Portal
        </a>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a asp-action="Logout" asp-controller="Auth" class="btn btn-outline-light btn-sm" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content -->
<main class="main-content container-fluid">
    <div class="table-responsive">
        <!-- Filters Section -->
        <div class="filters mb-3">
            <div class="row g-2 mt-1">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text" id="searchIcon">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control form-control-sm" id="searchInput" placeholder="Search by name, email, etc.">
                    </div>
                </div>
                <div class="col-md-1">
                    <select id="statusFilter" class="form-select form-select-sm">
                        <option value="">All Statuses</option>
                        <option value="Active">Active</option>
                        <option value="Inactive">Inactive</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select id="billingCycleFilter" class="form-select form-select-sm">
                        <option value="">All Billing Cycles</option>
                        <option value="Monthly">Monthly</option>
                        <option value="Annually">Annually</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <select id="planFilter" class="form-select form-select-sm">
                        <option value="">All Plans</option>
                        <option value="Upto2">Up to 2 dockets</option>
                        <option value="Upto4">Up to 4 dockets</option>
                        <option value="Upto6">Up to 6 dockets</option>
                        <option value="Unlimited">Unlimited dockets</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select id="paymentStatusFilter" class="form-select form-select-sm">
                        <option value="">All Payment Status</option>
                        <option value="Paid">Paid</option>
                        <option value="Not Paid">Not Paid</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Date Filters Section -->
        <div class="filters mb-4">
            <div class="row g-2">
                <div class="col-md-6">

                    <span>Start Subscription Date</span>
                    <input type="date" id="startDateFilter" class="form-control form-control-sm" placeholder="Start Subscription Date" title="Start Subscription Date">
                </div>
                <div class="col-md-6">
                    <span>End Subscription Date</span>
                    <input type="date" id="endDateFilter" class="form-control form-control-sm" placeholder="End Subscription Date" title="End Subscription Date">
                </div>
            </div>
        </div>

        <table class="table table-striped table-hover table-sm">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Service</th>
                    <th>Account</th>
                    <th>Case Numbers</th>
                    <th>Court Details</th>
                    <th>Subscription Start</th>
                    <th>Subscription End</th>
                    <th>Plan</th>
                    <th>Billing Cycle</th>
                    <th>Payment Status</th>
                    <th>Account Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tableBody">
                
                @foreach (var user in Model.Users)
                {
                    if (user.Role != "Admin")
                    {
                        var subscriptionEnd = user.BillingCycle == "Monthly"
                        ? user.SubscriptionStart.AddDays(30)
                        : user.SubscriptionStart.AddDays(365);
                        var paymentStatus = user.PaymentStatus ? "Paid" : "Not Paid";
                        var status = user.Status ? "Active" : "Inactive";

                        <tr>
                            <td class="searchable">@user.Fullname</td>
                            <td class="searchable">@user.Email</td>
                            <td class="searchable">@user.SocialMedia</td>
                            <td class="searchable">@user.SocialMediaHandle</td>
                            <td class="searchable">@string.Join(", ", user.CaseDetails.Select(cd => cd.CaseNumber))</td>
                            <td class="searchable">@string.Join(", ", user.CaseDetails.Select(cd => cd.CourtDetails))</td>
                            <td>@user.SubscriptionStart.ToString("yyyy-MM-dd")</td>
                            <td>@subscriptionEnd.ToString("yyyy-MM-dd")</td>
                            <td>@user.Plan</td>
                            <td>@user.BillingCycle</td>
                            <td>@paymentStatus</td>
                            <td>@status</td>
                            <td>
                                <a class="btn btn-sm btn-outline-danger btn-action" title="Delete User" data-toggle="tooltip"
                                   asp-action="DeleteUser" asp-controller="User" asp-route-userId="@user.Id">
                                    <i class="fas fa-trash"></i>
                                </a>

                                @if (!user.PaymentStatus)
                                {
                                    <a class="btn btn-sm btn-outline-success btn-action" title="Mark as Paid" data-toggle="tooltip"
                                       asp-action="MarkAsPaid" asp-controller="User" asp-route-userId="@user.Id">
                                        <i class="fas fa-check-circle"></i>
                                    </a>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-outline-secondary btn-action" title="User has already paid" data-toggle="tooltip" disabled>
                                        <i class="fas fa-check-circle"></i>
                                    </button>
                                }

                                @if (user.Status)
                                {
                                    <a class="btn btn-sm btn-outline-warning btn-action" title="Deactivate User" data-toggle="tooltip"
                                       asp-action="DeactivateUser" asp-controller="User" asp-route-userId="@user.Id">
                                        <i class="fas fa-user-slash"></i>
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-sm btn-outline-info btn-action" title="Activate User" data-toggle="tooltip"
                                       asp-action="ActivateUser" asp-controller="User" asp-route-userId="@user.Id">
                                        <i class="fas fa-user-check"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const billingCycleFilter = document.getElementById('billingCycleFilter');
        const planFilter = document.getElementById('planFilter');
        const paymentStatusFilter = document.getElementById('paymentStatusFilter');
        const startDateFilter = document.getElementById('startDateFilter');
        const endDateFilter = document.getElementById('endDateFilter');
        const tableBody = document.getElementById('tableBody');
        const rows = tableBody.getElementsByTagName('tr');

        function filterRows() {
            const query = searchInput.value.toLowerCase();
            const selectedStatus = statusFilter.value;
            const selectedBillingCycle = billingCycleFilter.value;
            const selectedPlan = planFilter.value;
            const selectedPaymentStatus = paymentStatusFilter.value;
            const selectedStartDate = startDateFilter.value;
            const selectedEndDate = endDateFilter.value;

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                let found = true;

                // Search by query
                const cells = row.getElementsByClassName('searchable');
                let searchMatch = false;
                for (let j = 0; j < cells.length; j++) {
                    const cellText = cells[j].innerText.toLowerCase();
                    if (cellText.includes(query)) {
                        searchMatch = true;
                        break;
                    }
                }
                if (!searchMatch) found = false;

                // Filter by status
                const statusText = row.cells[11].innerText;
                if (selectedStatus && statusText !== selectedStatus) found = false;

                // Filter by billing cycle
                const billingCycleText = row.cells[9].innerText;
                if (selectedBillingCycle && billingCycleText !== selectedBillingCycle) found = false;

                // Filter by plan
                const planText = row.cells[8].innerText;
                if (selectedPlan && planText !== selectedPlan) found = false;

                // Filter by payment status
                const paymentStatusText = row.cells[10].innerText;
                if (selectedPaymentStatus && paymentStatusText !== selectedPaymentStatus) found = false;

                // Filter by subscription start date
                const subscriptionStartText = row.cells[6].innerText;
                if (selectedStartDate && new Date(subscriptionStartText) < new Date(selectedStartDate)) found = false;

                // Filter by subscription end date
                const subscriptionEndText = row.cells[7].innerText;
                if (selectedEndDate && new Date(subscriptionEndText) > new Date(selectedEndDate)) found = false;

                // Show or hide the row
                row.style.display = found ? '' : 'none';
            }
        }

        // Attach event listeners to filters
        searchInput.addEventListener('keyup', filterRows);
        statusFilter.addEventListener('change', filterRows);
        billingCycleFilter.addEventListener('change', filterRows);
        planFilter.addEventListener('change', filterRows);
        paymentStatusFilter.addEventListener('change', filterRows);
        startDateFilter.addEventListener('change', filterRows);
        endDateFilter.addEventListener('change', filterRows);
    });
    const dateInput = document.getElementById('dateInput');

    // Set the date input type on focus
    dateInput.addEventListener('focus', function () {
        dateInput.type = 'date';
    });

    // Revert to placeholder on blur if no date selected
    dateInput.addEventListener('blur', function () {
        if (!dateInput.value) {
            dateInput.type = 'text';
        }
    });
</script>
